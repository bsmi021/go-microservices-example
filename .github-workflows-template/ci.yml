name: CI

on:
  push:
    branches: [ main, develop, claude/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        service: [api, mvc, webserver]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true

    - name: Build API service
      if: matrix.service == 'api'
      run: go build -v -o bin/api ./src/api

    - name: Build MVC service
      if: matrix.service == 'mvc'
      run: go build -v -o bin/mvc ./mvc

    - name: Build webserver service
      if: matrix.service == 'webserver'
      run: go build -v -o bin/webserver ./introduction/webserver

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.service }}
        path: bin/${{ matrix.service }}
        retention-days: 7

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push'

    strategy:
      matrix:
        service: [api, mvc, webserver]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile.${{ matrix.service }}
        push: false
        tags: go-microservices-${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
